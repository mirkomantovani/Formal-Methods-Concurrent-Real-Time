class RobotPositionSensor
    temporal domain integer

    visible Cart, Arm;

    modules Cart: RobotCartPositionSensor,
            Arm: RobotArmPositionSensor,
            Status: RobotStatus,
            Grid: Grid;

    axioms
        -- link3 is in the same position as the cart
        link3OnCart: \forall x (Arm.link3(x) \iff Body.position(x));

        -- cartTargetSpeed defines how often the robot cart can move in the grid
        cartSpeedNone: Status.currentCartSpeed == None \implies \exists x Futr(Cart.position(x), 1) && Cart.position(x);

        cartSpeedLowMoved: \exists x (Status.currentCartSpeed == Low && Cart.moved() \implies Cart.position(x) && Futr(Cart.position(x), 1));

        cartSpeedLowNotMoved: \exists x (Status.currentCartSpeed == Low && \neg Cart.moved() \implies Cart.position(x) && \exists y (Futr(Cart.position(y), 1) && x != y && Grid.adjacent(x, y)));

        cartSpeedNormal: \exists x (Status.currentCartSpeed == Normal && Cart.position(x) \implies \exists y (Futr(Cart.position(y), 1) && x != y && Grid.adjacent(x, y)));

        -- armCurrentSpeed defines how ofter the end effector can move
        -- if the speed is None, then the end effector doesn't move
        armSpeedNone: Status.currentArmSpeed == None \implies \exists x Futr(Arm.endEffector(x), 1) && Arm.endEffector(x);

        -- if the speed is low, then the arm can move from one area to another only half of the time
        armSpeedLowMoved: \exists x (Status.currentCartSpeed == None && Status.currentArmSpeed == Low && Arm.moved() \implies Arm.endEffector(x) && Futr(Arm.endEffector(x), 1));

        armSpeedLowNotMoved: \exists x (Status.currentCartSpeed == None && Status.currentArmSpeed == Low && \neg Arm.moved() \implies Arm.endEffector(x) && \exists y (Futr(Arm.endEffector(y), 1) && x != y && Grid.adjacent(x, y)));

        -- if the speed is normal, then the arm can move from one area to another at every time instant
        armSpeedNormal: \exists x (Status.currentCartSpeed == None && Status.currentArmSpeed == Normal && Arm.endEffector(x) \implies \exists y (Futr(Arm.endEffector(y), 1) && x != y && Grid.adjacent(x, y)));

        -- if the cart is moving, then the arm must stay on top of the cart, both the end effector and the link
        armOnTopMovingCart: \forall x (Status.currentCartSpeed != None && Cart.moved() && Cart.position(x) \implies Arm.position(x));
        
end RobotPositionSensor.