class SafetyChecker
    temporal domain integer;

    modules  Operator: OperatorPositionSensor,
             Robot: RobotPositionSensor,
             RobotStatus: RobotStatus,
             RobotController: RobotController,
             Grid: Grid;
    axioms
    
        -----------------------
        -- SAFETY ARM AXIOMS --
        -----------------------
        
        -- if the end effector is in the same area as the head of the operator, then the end effector is stopped
        headSameAreaAsRobotArm:
            \forall x (Robot.Arm.position(x) && Operator.head(x) &&
                RobotController.isArmMoving() \implies
                RobotStatus.targetEndEffectorSpeed == None);
                
        -- if the head of the operator is close to the arm of the robot, then the arm is either moving slowly or staying still
        headCloseToRobotArm:
            \forall x, y (x != y && Robot.Arm.position(x) && Operator.head(y) && Grid.adjacent(x, y) &&
                RobotController.isArmMoving() \implies
                (RobotStatus.targetEndEffectorSpeed == None || RobotStatus.targetEndEffectorSpeed == Low));

        -- if the arms of the operator are in the same area as the arm
        -- of the robot, then either the arm of the robot is staying
        -- still or is moving slow.
        sameAreaArms:
            \forall x (Robot.Arm.position(x) && Operator.arms(x) && \neg Robot.Arm.contact() \implies
                 RobotStatus.currentEndEffectorSpeed == None || RobotStatus.currentEndEffectorSpeed == Low);

        -- if the arms of the operator are touching the arm of the robot, then the arm is not moving
        sameAreaArmsWithContact:
            \forall x (Robot.Arm.position(x) && Operator.arms(x) && Robot.Arm.contact() \implies
                 RobotStatus.currentEndEffectorSpeed == None);

        -- if the arm of the robot is in an area adjacent to the arms
        -- of the operator, then the robot is at most moving slow
        armsCloseArm:
            \forall x, y (Robot.Arm.position(x) && Operator.arms(y) && x != y && Grid.adjacent(x, y) \implies
                 RobotStatus.currentEndEffectorSpeed == None || RobotStatus.currentEndEffectorSpeed == Slow);

        -- if the arm of the robot is in the same area as the operator's body, then the arm is not moving
        armCloseBody:
            \forall x (Robot.Arm.position(x) && Operator.body(x) \implies
                 RobotStatus.currentEndEffectorSpeed == None);

        -- if the arm of the robot is in an area adjacent to the body
        -- of the operator, then the robot is at most moving slow
        bodyCloseArm:
            \forall x, y (Robot.Arm.position(x) && Operator.body(y) && x != y && Grid.adjacent(x, y) \implies
                 RobotStatus.currentEndEffectorSpeed == None || RobotStatus.currentEndEffectorSpeed == Slow);

        ------------------------       
        -- SAFETY CART AXIOMS --
        ------------------------

        -- if the operator is in an area close to the wall and the
        -- robot is in an area adjacent to it, then the robot will not
        -- move to an area adjacent to the one occupied by the
        -- operator
        operatorCloseToWall:
            \forall x, y (x != y && Operator.body(x) && Grid.border(x) && Robot.Cart.position(y) && Grid.adjacent(x, y) \implies
                \exists z (Futr((RobotStatus.currentCartSpeed == Low || RobutStatus.currentCardSpeed == None) &&
                           Robot.Cart.position(z) && (z == y || Grid.adjacent(z, y) && \neg Grid.adjacent(z, x))), 1));

        -- if the operator is in a dangerous area and the
        -- robot is in an area adjacent to it, then the robot will not
        -- move to an area adjacent to the one occupied by the
        -- operator
        operatorDangerZone:
            \forall x, y (x != y && Operator.body(x) && Grid.danger(x) && Robot.Cart.position(y) && Grid.adjacent(x, y) \implies
                \exists z (Futr((RobotStatus.currentCartSpeed == Low || RobutStatus.currentCardSpeed == None) &&
                           Robot.Cart.position(z) && (z == y || Grid.adjacent(z, y) && \neg Grid.adjacent(z, x))), 1));


        -- if the operator is in a transit area and the robot is in
        -- the same area, then the robot needs to move slow
        operatorTransitZone:
            \forall x (Operator.body(x) && Grid.transit(x) && Robot.Cart.position(x) \implies
                RobotStatus.currentCartSpeed == Low || RobotStatus.currentCartSpeed == None);
				
end SafetyChecker.